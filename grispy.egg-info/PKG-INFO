Metadata-Version: 1.1
Name: grispy
Version: 2019.10
Summary: Grid Search in Python
Home-page: https://github.com/mchalela/GriSPy
Author: ['Martin Chalela', 'Emanuel Sillero', 'Luis Pereyra', 'Alejandro Garcia']
Author-email: tinchochalela@gmail.com
License: MIT
Description: # GriSPy (Grid Search in Python)
        
        
        **GriSPy** is a regular grid search algorithm for quick nearest-neighbor lookup.
        
        This class indexes a set of k-dimensional points in a regular grid providing a fast aproach for nearest neighbors queries. Optional periodic boundary conditions can be provided for each axis individually.
        
        GriSPy has the following queries implemented:
        - **bubble_neighbors**: find neighbors within a given radius. A different radius for each centre can be provided.
        - **shell_neighbors**: find neighbors within given lower and upper radius. Different lower and upper radius can be provided for each centre.
        - **nearest_neighbors**: find the nth nearest neighbors for each centre.
        
        And the following methods are available:
        - **set_periodicity**: define the periodicity conditions.
        - **save_grid**: save the grid for future use.
        - **load_grid**: load a previously saved grid.
        
        --------------------------------
        
        ## Requirements
        
        You need Python 3.7 or later to run GriSPy. You can have multiple Python
        versions (2.x and 3.x) installed on the same system without problems.
        
        
        ## Development Install
        
        1.  Clone this repo and then inside the local
        2.  Execute
        
                $ pip install -e .
        
        ## Authors
        
        Martin Chalela (E-mail: tinchochalela@gmail.com),  
        Emanuel Sillero, Luis Pereyra and Alejandro Garcia
        
Keywords: grispy,nearest,neighbors,search,grid
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
